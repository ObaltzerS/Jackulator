function CalcLogic.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push constant 0
pop this 1
push pointer 0
return
function CalcLogic.add 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push argument 2
pop this 1
push this 0
push this 1
add
return
function CalcLogic.subtract 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push argument 2
pop this 1
push this 0
push this 1
sub
return
function CalcLogic.divide 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push argument 2
pop this 1
push this 0
push this 1
call Math.divide 2
return
function CalcLogic.multiply 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push argument 2
pop this 1
push this 0
push this 1
call Math.multiply 2
return
function CalcLogic.factorial 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push constant 1
pop this 1
label WHILE_EXP0
push this 0
push constant 0
gt
not
if-goto WHILE_END0
push this 1
push this 0
call Math.multiply 2
pop this 1
push this 0
push constant 1
sub
pop this 0
goto WHILE_EXP0
label WHILE_END0
push this 1
return
function CalcLogic.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
